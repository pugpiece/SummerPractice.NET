@using Entities
@using Achievements.BLL
@using Achievements.DependencyResolver
@using Achievements
@using Ninject
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Registration</title>
    <link href="~/Styles/Login.css" rel="stylesheet" />
</head>

<body>
    <div class="content">
        <div class="container-for-buttons">

            <h1 class="h1-login">Registration</h1>

            <form class="form-signup" action="~/Pages/Login/SignUp.cshtml" method="post" enctype="multipart/form-data">
                

                <label class="signup-form-label" for="username-signup">Username</label>
                <input required maxlength="30" minlength="4" class="signup-form-input" type="text" id="username-signup" name="Username" value="" placeholder="Username" />

                <label class="signup-form-label" for="password-signup">Password</label>
                <input required maxlength="30" minlength="4" class="signup-form-input" type="password" id="password-signup" name="Password" value="" placeholder="Password" />

                <label class="signup-form-label" for="repeat-password-signup">Repeat password</label>
                <input required maxlength="30" minlength="4" class="signup-form-input" type="password" name="RepeatPassword" id="repeat-password-signup" value="" placeholder="Repeat password" />

                <button type="submit" class="button-sign-in">Sign Up</button>
            </form>

            <form action="~/index.cshtml" method="post" enctype="multipart/form-data">
                <button type="submit" class="button-sign-in">Back to main page</button>
            </form>

        </div>
    </div>
</body>
</html>

@if (IsPost)
{
    if (Request["Action"] != null &&
        Request["Action"] == "signup")
    {
        if (Request["Username"] != null &&
            Request["Password"] != null &&
            Request["RepeatPassword"] != null &&
            Request["Username"] != "" &&
            Request["Password"] != "" &&
            Request["RepeatPassword"] != "" &&
            Request["Password"] == Request["RepeatPassword"])
        {

            var userLogic = DependencyResolver.Kernel.Get<IUserLogic>();
            User thisUser = new User(Request["Username"] as string, Request["Password"] as string);
            try
            {
                userLogic.Add(thisUser);
                Response.Redirect("~/Pages/Login/SignUpSuccess.cshtml");
            }
            catch
            {
                Response.Redirect("~/Pages/Login/SignUpFailure.cshtml");
            }
        }
    }
}

<script src="~/Scripts/validateForm.js"></script>
