@using Entities
@using Achievements.BLL
@using Achievements.DependencyResolver
@using Achievements
@using Ninject
@{
    Layout = null;
}

<!DOCTYPE html>

<html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Sign In</title>
    <link href="~/Styles/Login.css" rel="stylesheet" />
</head>

<body>
    <div class="content">
        <div class="container-for-buttons">

            <h1 class="h1-login">Sign In</h1>

            <form action="~/Pages/Login/SignIn.cshtml" method="post" enctype="multipart/form-data">
                <input type="hidden" name="Action" value="signin" />
                <input required maxlength="30" minlength="3" class="sigin-form-input" type="text" id="username-signin" name="Username" value="" placeholder="Username" />

                <label class="sigin-form-label" for="password-signin">Password</label>
                <input required maxlength="30" minlength="4" class="sigin-form-input" type="password" id="password-signin" name="Password" value="" placeholder="Password" />

                <button type="submit" class="button-sign-in">SignIn</button>
            </form>

            <form action="~/index.cshtml" method="post" enctype="multipart/form-data">
                <button type="submit" class="button-sign-in">Back to main page</button>
            </form>

        </div>
    </div>

</body>
</html>

@{
    if (IsPost)
    {
        if (Request["Action"] != null &&
            Request["Action"] == "signin")
        {
            if (Request["Username"] != null &&
                Request["Password"] != null &&
                Request["Username"] != "" &&
                Request["Password"] != "")
            {
                var userLogic = DependencyResolver.Kernel.Get<IUserLogic>();
                User thisUser = new User(Request["Username"] as string, Request["Password"] as string);
                bool isUser = userLogic.Log(thisUser);
                if (isUser)
                {
                    FormsAuthentication.SetAuthCookie(Request["Username"], createPersistentCookie: true);
                    Response.Redirect("~");
                }
                else
                {
                    Response.Redirect("~/Pages/Login/SignInError.cshtml");
                }
            }
        }
    }
}
